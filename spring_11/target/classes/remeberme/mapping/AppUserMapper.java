package remeberme.mapping;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import remeberme.domain.AppUser;
import remeberme.domain.AppUserExample;

public interface AppUserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP_USER
     *
     * @mbg.generated
     */
    @SelectProvider(type=AppUserSqlProvider.class, method="countByExample")
    long countByExample(AppUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP_USER
     *
     * @mbg.generated
     */
    @DeleteProvider(type=AppUserSqlProvider.class, method="deleteByExample")
    int deleteByExample(AppUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP_USER
     *
     * @mbg.generated
     */
    @Delete({
        "delete from APP_USER",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP_USER
     *
     * @mbg.generated
     */
    @Insert({
        "insert into APP_USER (id, sso_id, ",
        "password, first_name, ",
        "last_name, email, ",
        "state)",
        "values (#{id,jdbcType=BIGINT}, #{ssoId,jdbcType=VARCHAR}, ",
        "#{password,jdbcType=VARCHAR}, #{firstName,jdbcType=VARCHAR}, ",
        "#{lastName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, ",
        "#{state,jdbcType=VARCHAR})"
    })
    int insert(AppUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP_USER
     *
     * @mbg.generated
     */
    @InsertProvider(type=AppUserSqlProvider.class, method="insertSelective")
    int insertSelective(AppUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP_USER
     *
     * @mbg.generated
     */
    @SelectProvider(type=AppUserSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="sso_id", property="ssoId", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="first_name", property="firstName", jdbcType=JdbcType.VARCHAR),
        @Result(column="last_name", property="lastName", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="state", property="state", jdbcType=JdbcType.VARCHAR)
    })
    List<AppUser> selectByExample(AppUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP_USER
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, sso_id, password, first_name, last_name, email, state",
        "from APP_USER",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="sso_id", property="ssoId", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="first_name", property="firstName", jdbcType=JdbcType.VARCHAR),
        @Result(column="last_name", property="lastName", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="state", property="state", jdbcType=JdbcType.VARCHAR)
    })
    AppUser selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP_USER
     *
     * @mbg.generated
     */
    @UpdateProvider(type=AppUserSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") AppUser record, @Param("example") AppUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP_USER
     *
     * @mbg.generated
     */
    @UpdateProvider(type=AppUserSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") AppUser record, @Param("example") AppUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP_USER
     *
     * @mbg.generated
     */
    @UpdateProvider(type=AppUserSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(AppUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table APP_USER
     *
     * @mbg.generated
     */
    @Update({
        "update APP_USER",
        "set sso_id = #{ssoId,jdbcType=VARCHAR},",
          "password = #{password,jdbcType=VARCHAR},",
          "first_name = #{firstName,jdbcType=VARCHAR},",
          "last_name = #{lastName,jdbcType=VARCHAR},",
          "email = #{email,jdbcType=VARCHAR},",
          "state = #{state,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(AppUser record);
}